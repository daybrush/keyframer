{"version":3,"file":"keyframer.esm.js","sources":["../src/consts.ts","../src/Keyframer.ts"],"sourcesContent":["export const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || (CSSRule as any).WEBKIT_KEYFRAMES_RULE;\nexport const KEYFRAME_RULE = CSSRule.KEYFRAME_RULE || (CSSRule as any).WEBKIT_KEYFRAME_RULE;\n","import { toArray, IObject, isObject, splitComma } from \"@daybrush/utils\";\nimport { Frame } from \"scenejs\";\nimport { KEYFRAMES_RULE, KEYFRAME_RULE } from \"./consts\";\n/**\n * Make the CSS Keyframes the keyframes object.\n * @namespace Keyframer\n */\n\n/**\n* Make the CSS Keyframes the keyframes deep object.\n * @memberof Keyframer\n * @param - The name of the keyframes(`CSSKeyframes​Rule`) in the stylesheet(`CSSStyleSheet`).\n * @returns the keyframes deep object\n * @example\n// @keyframes keyframes {\n//     0% {\n//         opacity: 1;\n//         transform: translate(0px, 0px) rotate(0deg);\n//     }\n//     50% {\n//         opacity: 0;\n//         transform: translate(50px, 0px) rotate(0deg);\n//     }\n//     100% {\n//         opacity: 1;\n//         transform: translate(100px, 0px) rotate(50deg);\n//     }\n// }\n\nimport { getKeyframesObject } from \"keyframer\";\n\nconst obj = getKeyframesObject(\"keyframes\");\n// {\n//     \"0%\": {\n//         opacity: 1,\n//         transform: { translate: \"0px,0px\", rotate: \"0deg\" },\n//     }\n//     \"50%\": {\n//         opacity: 0,\n//         transform: { translate: \"50px,0px\", rotate: \"0deg\" },\n//     },\n//     \"100%\": {\n//         opacity: 1,\n//         transform: { translate: \"100px,0px\", rotate: \"50deg\" },\n//     },\n// }\n */\nexport function getKeyframesObject(name: string | IObject<string>): IObject<any> {\n    const keyframes = isObject(name) ? name : getKeyframes(name);\n    const keyframesObject: IObject<any> = {};\n\n    for (const time in keyframes) {\n        keyframesObject[time] = new Frame(keyframes[time]).get();\n    }\n    return keyframesObject;\n}\n\n/**\n * Make the CSS Keyframes the keyframes object.\n * @memberof Keyframer\n * @param - The name of the keyframes(`CSSKeyframes​Rule`) in the stylesheet(`CSSStyleSheet`).\n * @returns the keyframes object\n * @example\n// @keyframes keyframes {\n//     0% {\n//         opacity: 1;\n//         transform: translate(0px, 0px) rotate(0deg);\n//     }\n//     50% {\n//         opacity: 0;\n//         transform: translate(50px, 0px) rotate(0deg);\n//     }\n//     100% {\n//         opacity: 1;\n//         transform: translate(100px, 0px) rotate(50deg);\n//     }\n// }\n\nimport { getKeyframes } from \"keyframer\";\n\n// {\n//     \"0%\": \"opacity: 1; transform: translate(0px, 0px) rotate(0deg)\",\n//     \"50%\": \"opacity: 0; transform: translate(50px, 0px) rotate(0deg)\",\n//     \"100%\": \"opacity: 1; transform: translate(100px, 0px) rotate(50deg)\",\n// }\nconst obj = getKeyframes(\"keyframes\");\n */\nexport function getKeyframes(name: string): IObject<string> {\n    const styleSheets = toArray(document.styleSheets) as CSSStyleSheet[];\n\n    const sheets = styleSheets.filter(sheet => {\n        try {\n            const length = sheet.cssRules.length;\n\n            return length > 0;\n        } catch (e) {\n            return false;\n        }\n    });\n    const sheetsLength = sheets.length;\n\n    for (let i = 0; i < sheetsLength; ++i) {\n        const sheet = sheets[i];\n        const keyframesRules = toArray(sheet.cssRules) as CSSKeyframesRule[];\n        const keyframesRule = keyframesRules.filter(rule => {\n            return rule.name === name && rule.type === KEYFRAMES_RULE;\n        })[0];\n\n        if (keyframesRule) {\n            const keyframeRules = toArray(keyframesRule.cssRules) as CSSKeyframeRule[];\n            const obj: IObject<string> = {};\n\n            keyframeRules.forEach(rule => {\n                if (rule.type === KEYFRAME_RULE) {\n                    const keyText = rule.keyText;\n                    const cssText = rule.style.cssText;\n\n                    splitComma(keyText).forEach(time => {\n                        obj[time] = cssText;\n                    });\n                }\n            });\n            return obj;\n        }\n    }\n    return {};\n}\n"],"names":["KEYFRAMES_RULE","CSSRule","WEBKIT_KEYFRAMES_RULE","KEYFRAME_RULE","WEBKIT_KEYFRAME_RULE","getKeyframesObject","name","keyframes","isObject","getKeyframes","keyframesObject","time","Frame","get","styleSheets","toArray","document","sheets","filter","sheet","length","cssRules","e","sheetsLength","i","keyframesRules","keyframesRule","rule","type","keyframeRules","obj_1","forEach","keyText","cssText_1","style","cssText","splitComma"],"mappings":";;;;;;;;;;;AAAO,IAAMA,cAAc,GAAGC,OAAO,CAACD,cAAR,IAA2BC,OAAe,CAACC,qBAAlE;AACP,AAAO,IAAMC,aAAa,GAAGF,OAAO,CAACE,aAAR,IAA0BF,OAAe,CAACG,oBAAhE;;ACEP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAgBC,mBAAmBC;MACzBC,SAAS,GAAGC,QAAQ,CAACF,IAAD,CAAR,GAAiBA,IAAjB,GAAwBG,YAAY,CAACH,IAAD,CAAtD;MACMI,eAAe,GAAiB,EAAtC;;OAEK,IAAMC,IAAX,IAAmBJ,SAAnB,EAA8B;IAC1BG,eAAe,CAACC,IAAD,CAAf,GAAwB,IAAIC,KAAJ,CAAUL,SAAS,CAACI,IAAD,CAAnB,EAA2BE,GAA3B,EAAxB;;;SAEGH,eAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCJ,SAAgBD,aAAaH;MACnBQ,WAAW,GAAGC,OAAO,CAACC,QAAQ,CAACF,WAAV,CAA3B;MAEMG,MAAM,GAAGH,WAAW,CAACI,MAAZ,CAAmB,UAAAC,KAAA;QAC1B;UACMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeD,MAA9B;aAEOA,MAAM,GAAG,CAAhB;KAHJ,CAIE,OAAOE,CAAP,EAAU;aACD,KAAP;;GANO,CAAf;MASMC,YAAY,GAAGN,MAAM,CAACG,MAA5B;;0BAESI;QACCL,KAAK,GAAGF,MAAM,CAACO,CAAD,CAApB;QACMC,cAAc,GAAGV,OAAO,CAACI,KAAK,CAACE,QAAP,CAA9B;QACMK,aAAa,GAAGD,cAAc,CAACP,MAAf,CAAsB,UAAAS,IAAA;aACjCA,IAAI,CAACrB,IAAL,KAAcA,IAAd,IAAsBqB,IAAI,CAACC,IAAL,KAAc5B,cAA3C;KADkB,EAEnB,CAFmB,CAAtB;;QAII0B,aAAJ,EAAmB;UACTG,aAAa,GAAGd,OAAO,CAACW,aAAa,CAACL,QAAf,CAA7B;UACMS,KAAG,GAAoB,EAA7B;MAEAD,aAAa,CAACE,OAAd,CAAsB,UAAAJ,IAAA;YACdA,IAAI,CAACC,IAAL,KAAczB,aAAlB,EAAiC;cACvB6B,OAAO,GAAGL,IAAI,CAACK,OAArB;cACMC,SAAO,GAAGN,IAAI,CAACO,KAAL,CAAWC,OAA3B;UAEAC,UAAU,CAACJ,OAAD,CAAV,CAAoBD,OAApB,CAA4B,UAAApB,IAAA;YACxBmB,KAAG,CAACnB,IAAD,CAAH,GAAYsB,SAAZ;WADJ;;OALR;;eAUOH;;;;;OArBV,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAApB,EAAkC,EAAEC,CAApC;0BAASA;;;;;SAwBF,EAAP;;;;;"}